name: Publish Distribuition Workflow

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
    inputs:
      os:
        required: true
        type: string
      node-versions:
        required: true
        type: string

jobs:
  publish:
    name: Publish Package on ${{ inputs.os }}
    if: >
      (github.event_name == 'push') ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ${{ inputs.os }}
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.JS Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Use Cache "node-modules"
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: node-modules-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Use Cache "package-lock.json"
        uses: actions/cache@v4
        with:
          path: ./package-lock.json
          key: package-lock-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            package-lock-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Use Cache "dist"
        uses: actions/cache@v4
        with:
          path: ./dist
          key: dist-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            dist-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Download Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: npm-package-${{ inputs.os }}-${{ matrix.node-version }}
          path: .

      - name: Download Checksum Artifact
        uses: actions/download-artifact@v4
        with:
          name: checksum-${{ inputs.os }}-${{ matrix.node-version }}
          path: .

      - name: Validate Package Checksum
        run: sha256sum -c checksum.txt

      - name: Publish Package
        if: >
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.head_ref == 'dev' && github.base_ref == 'main')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Append -beta to package.json version
        if: >
          (github.event_name == 'push' && github.ref == 'refs/heads/dev') ||
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'dev')
        run: |
          # Get current version
          VERSION=$(node -p "require('./package.json').version")
          # Append -beta, e.g. 1.2.3-beta
          NEW_VERSION="${VERSION}-beta"
          echo "New version: $NEW_VERSION"
          # Update package.json version without creating a git tag
          npm version "$NEW_VERSION" --no-git-tag-version

      - name: Publish Package To Beta
        if: >
          (github.event_name == 'push' && github.ref == 'refs/heads/dev') ||
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'dev')
        run: npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
