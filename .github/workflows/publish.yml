name: Publish Distribuition Workflow

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
    inputs:
      os:
        required: true
        type: string
      node-versions:
        required: true
        type: string

jobs:
  publish:
    name: Publish Package on ${{ inputs.os }}
    if: >
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && (github.base_ref == 'main' || github.base_ref == 'dev'))
    runs-on: ${{ inputs.os }}
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.JS Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: Use Cache "dist"
        uses: actions/cache@v4
        with:
          path: ./dist
          key: dist-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('package.json') }}
          restore-keys: |
            dist-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Generate TAR package file
        run: |
          npm run pack:linux:tar

      - name: Publish Package
        if: >
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.head_ref == 'dev' && github.base_ref == 'main')
        run: npm publish ./arch-unit-js.tar.tgz --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Append -beta to package.json version
        if: >
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'dev')
        run: |
          # Get current version
          VERSION=$(node -p "require('./package.json').version")
          # Append -beta, e.g. 1.2.3-beta
          NEW_VERSION="${VERSION}-beta"
          echo "New version: $NEW_VERSION"
          # Update package.json version without creating a git tag
          npm version "$NEW_VERSION" --no-git-tag-version

      - name: Publish Package To Beta
        if: >
          (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'dev')
        run: npm publish ./arch-unit-js.tar.tgz --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
